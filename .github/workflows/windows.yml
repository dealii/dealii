name: github-windows

on:
  push:
  pull_request:
    types:
    - opened
    - reopened
    - synchronize
    - ready_for_review

concurrency:
  group: ${{ github.event_name }}-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{github.event_name == 'pull_request'}}

permissions:
  contents: read

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 4
  CTEST_OUTPUT_ON_FAILURE: 1
  # test only in serial to avoid file locking error on ZERO_CHECK.lastbuildstate
  CTEST_PARALLEL_LEVEL: 1

jobs:
  windows-serial:
    # Serial build on Windows

    name: ${{ matrix.os }} serial
    runs-on: ${{ matrix.os }}

    #
    # The following condition only runs the workflow on 'push' or if the
    # 'pull_request' is not a draft. This is only useful for hackathons or
    # other situations when the CI is massively overburdened with pull
    # requests.
    #
    # if: ${{ github.event_name == 'push' || !github.event.pull_request.draft }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, windows-2022]

    steps:
    - uses: actions/checkout@v4
    - name: set up path
      # needed to use GNU patch instead of Strawberry Perl patch
      run: |
        echo "c:\program files\git\usr\bin" >> $env:GITHUB_PATH
    - name: info
      run: |
        patch --version
        cmake --version
        wmic logicaldisk get size, freespace, caption
    - name: configure
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=c:/project -DDEAL_II_CXX_FLAGS="-WX /D FE_EVAL_FACTORY_DEGREE_MAX=2" -T host=x64 -A x64
    - name: print detailed.log
      run: type build/detailed.log
    - name: build
      run: |
        cmake --build build --target install
    - name: test
      run: |
        cmake --build build --target setup_tests_a-framework setup_tests_examples setup_tests_quick_tests
        ctest --test-dir build --build-config Debug --extra-verbose
    - name: upload library
      # run only if a PR is merged into master
      if: ${{ github.ref == 'refs/heads/master' && matrix.os == 'windows-2022' }}
      uses: actions/upload-artifact@v4
      with:
        name: dealii-${{ matrix.os }}
        path: c:/project
    - name: upload CMakeConfigureLog
      uses: actions/upload-artifact@v4
      if: always()
      continue-on-error: true
      with:
        name: ${{ matrix.os }}-serial-CMakeConfigureLog.yaml
        path: build/CMakeFiles/CMakeConfigureLog.yaml
