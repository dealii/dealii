// ---------------------------------------------------------------------
//
// Copyright (C) 2012 - 2015 by the deal.II authors
//
// This file is part of the deal.II library.
//
// The deal.II library is free software; you can use it, redistribute
// it, and/or modify it under the terms of the GNU Lesser General
// Public License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
// The full text of the license can be found in the file LICENSE at
// the top level of the deal.II distribution.
//
// ---------------------------------------------------------------------

#ifndef __deal2__config_h
#define __deal2__config_h


/***********************************************************************
 * Two macro names that we put at the top and bottom of all deal.II files
 * and that will be expanded to "namespace dealii {" and "}".
 */

#define DEAL_II_NAMESPACE_OPEN namespace dealii {
#define DEAL_II_NAMESPACE_CLOSE }


/***********************************************************************
 * Information about deal.II:
 */

#define DEAL_II_PACKAGE_NAME "@DEAL_II_PACKAGE_NAME@"

#define DEAL_II_PACKAGE_VERSION "@DEAL_II_PACKAGE_VERSION@"

#define DEAL_II_VERSION_MAJOR @DEAL_II_VERSION_MAJOR@
#define DEAL_II_VERSION_MINOR @DEAL_II_VERSION_MINOR@
#define DEAL_II_VERSION_SUBMINOR @DEAL_II_VERSION_SUBMINOR@


/***********************************************************************
 * Configured deal.II features:
 */

#cmakedefine DEAL_II_WITH_64BIT_INDICES
#cmakedefine DEAL_II_WITH_ARPACK
#cmakedefine DEAL_II_WITH_BZIP2
#cmakedefine DEAL_II_WITH_CXX11
#cmakedefine DEAL_II_WITH_HDF5
#cmakedefine DEAL_II_WITH_LAPACK
#cmakedefine DEAL_II_WITH_METIS
#cmakedefine DEAL_II_WITH_MPI
#cmakedefine DEAL_II_WITH_MUPARSER
#cmakedefine DEAL_II_WITH_NETCDF
#cmakedefine DEAL_II_WITH_OPENCASCADE
#cmakedefine DEAL_II_WITH_P4EST
#cmakedefine DEAL_II_WITH_PETSC
#cmakedefine DEAL_II_WITH_SLEPC
#cmakedefine DEAL_II_WITH_THREADS
#cmakedefine DEAL_II_WITH_TRILINOS
#cmakedefine DEAL_II_WITH_UMFPACK
#cmakedefine DEAL_II_WITH_ZLIB


/***********************************************************************
 * Compiler bugs:
 *
 * For documentation see cmake/checks/check_03_compiler_bugs.cmake
 */

#cmakedefine DEAL_II_TEMPL_SPEC_FRIEND_BUG
#cmakedefine DEAL_II_MEMBER_ARRAY_SPECIALIZATION_BUG
#cmakedefine DEAL_II_MEMBER_VAR_SPECIALIZATION_BUG
#cmakedefine DEAL_II_EXPLICIT_CONSTRUCTOR_BUG
#cmakedefine DEAL_II_CONST_MEMBER_DEDUCTION_BUG
#cmakedefine DEAL_II_BOOST_BIND_COMPILER_BUG
#cmakedefine DEAL_II_BIND_NO_CONST_OP_PARENTHESES
#cmakedefine DEAL_II_CONSTEXPR_BUG


/***********************************************************************
 * Compiler features:
 *
 * For documentation see cmake/checks/check_01_compiler_features.cmake
 */

#cmakedefine DEAL_II_COMPILER_USE_VECTOR_ARITHMETICS
#cmakedefine DEAL_II_VECTOR_ITERATOR_IS_POINTER
#cmakedefine DEAL_II_HAVE_BUILTIN_EXPECT
#cmakedefine DEAL_II_HAVE_VERBOSE_TERMINATE
#cmakedefine DEAL_II_HAVE_GLIBC_STACKTRACE
#cmakedefine DEAL_II_HAVE_LIBSTDCXX_DEMANGLER
#cmakedefine __PRETTY_FUNCTION__ @__PRETTY_FUNCTION__@
#cmakedefine DEAL_II_DEPRECATED @DEAL_II_DEPRECATED@


/***********************************************************************
 * CPU features:
 *
 * For documentation see cmake/checks/check_01_cpu_features.cmake
 */

#cmakedefine DEAL_II_WORDS_BIGENDIAN
#define DEAL_II_COMPILER_VECTORIZATION_LEVEL @DEAL_II_COMPILER_VECTORIZATION_LEVEL@
#define DEAL_II_OPENMP_SIMD_PRAGMA @DEAL_II_OPENMP_SIMD_PRAGMA@


/***********************************************************************
 * Language features:
 *
 * For documentation see cmake/checks/check_01_cxx_features.cmake
 */

#cmakedefine DEAL_II_HAVE_CXX11_IS_TRIVIALLY_COPYABLE
#cmakedefine DEAL_II_HAVE_ISNAN
#cmakedefine DEAL_II_HAVE_UNDERSCORE_ISNAN
#cmakedefine DEAL_II_HAVE_ISFINITE


/***********************************************************************
 * System features:
 *
 * For documentation see cmake/checks/check_02_system_features.cmake
 */

#cmakedefine DEAL_II_HAVE_SYS_RESOURCE_H
#cmakedefine DEAL_II_HAVE_SYS_TIME_H
#cmakedefine DEAL_II_HAVE_SYS_TIMES_H
#cmakedefine DEAL_II_HAVE_SYS_TYPES_H
#cmakedefine DEAL_II_HAVE_UNISTD_H
#cmakedefine DEAL_II_HAVE_GETHOSTNAME
#cmakedefine DEAL_II_HAVE_GETPID
#cmakedefine DEAL_II_HAVE_RAND_R
#cmakedefine DEAL_II_HAVE_TIMES
#cmakedefine DEAL_II_HAVE_JN

#cmakedefine DEAL_II_MSVC

/*
 * Disable a bunch of warnings for Microsoft Visual C++.
 */
#ifdef _MSC_VER
#  pragma warning( disable : 4244 ) /* implied downcasting from double to float */
#  pragma warning( disable : 4267 ) /* implied downcasting from size_t to unsigned int */
#  pragma warning( disable : 4996 ) /* unsafe functions, such as strcat and sprintf */
#  pragma warning( disable : 4355 ) /* 'this' : used in base member initializer list */
#  pragma warning( disable : 4661 ) /* no suitable definition provided for explicit template instantiation request */
#  pragma warning( disable : 4800 ) /* forcing value to bool 'true' or 'false' (performance warning) */
#  pragma warning( disable : 4146 ) /* unary minus operator applied to unsigned type, result still unsigned */
#  pragma warning( disable : 4667 ) /* no function template defined that matches forced instantiation */
#  pragma warning( disable : 4520 ) /* multiple default constructors specified */
#  pragma warning( disable : 4700 ) /* uninitialized local variable */
#  pragma warning( disable : 4789 ) /* destination of memory copy is too small */
#  pragma warning( disable : 4808 ) /* case 'value' is not a valid value for switch condition of type 'bool */
/*
 * Also make sure we don't let MS Windows headers define min/max as
 * macros, see http://support.microsoft.com/kb/143208
 */
#  define NOMINMAX
#endif /*_MSC_VER*/


/***********************************************************************
 * Thread support
 *
 * For documentation see cmake/configure/configure_1_threads.cmake
 */

#cmakedefine DEAL_II_USE_MT_POSIX
#cmakedefine DEAL_II_USE_MT_POSIX_NO_BARRIERS

/*
 * Depending on the use of threads, we will have to make some variables
 * volatile. We do this here in a very old-fashioned C-style, but still
 * convenient way.
 */
#ifdef DEAL_II_WITH_THREADS
#  define DEAL_VOLATILE volatile
#else
#  define DEAL_VOLATILE
#endif


/***********************************************************************
 * Various macros for version number query and comparison:
 */

/*
 * deal.II:
 */

#define DEAL_II_VERSION_GTE(major,minor,subminor) \
 ((DEAL_II_VERSION_MAJOR * 10000 + \
    DEAL_II_VERSION_MINOR * 100 + \
     DEAL_II_VERSION_SUBMINOR) \
    >=  \
    (major)*10000 + (minor)*100 + (subminor))

/*
 * p4est:
 */

#ifdef DEAL_II_WITH_P4EST
#  define DEAL_II_P4EST_VERSION_MAJOR @P4EST_VERSION_MAJOR@
#  define DEAL_II_P4EST_VERSION_MINOR @P4EST_VERSION_MINOR@
#  define DEAL_II_P4EST_VERSION_SUBMINOR @P4EST_VERSION_SUBMINOR@
#  define DEAL_II_P4EST_VERSION_PATCH @P4EST_VERSION_PATCH@

#  define DEAL_II_P4EST_VERSION_GTE(major,minor,subminor,patch) \
 ((DEAL_II_P4EST_VERSION_MAJOR * 1000000 + \
    DEAL_II_P4EST_VERSION_MINOR * 10000 + \
     DEAL_II_P4EST_VERSION_SUBMINOR * 100 + \
      DEAL_II_P4EST_VERSION_PATCH) \
    >=  \
    (major)*1000000 + (minor)*10000 + (subminor)*100 + (patch))
#else
  // p4est up to 0.3.4.1 didn't define P4EST_VERSION_*. since
  // we didn't supports anything before 0.3.4, we assume 0.3.4
  // This means that we can't use the new features in 0.3.4.1
#  define DEAL_II_P4EST_VERSION_GTE(major,minor,subminor,patch) \
  ((0 * 1000000 + \
    3 * 10000 + \
    4 * 100 + \
    0) \
    >=  \
    (major)*1000000 + (minor)*10000 + (subminor)*100 + (patch))
#endif

/*
 * PETSc:
 *
 * Note: The following definitions will be set in petscconf.h and
 *       petscversion.h, so we don't repeat them here.
 *
 *  PETSC_VERSION_MAJOR
 *  PETSC_VERSION_MINOR
 *  PETSC_VERSION_SUBMINOR
 *  PETSC_VERSION_PATCH
 *  PETSC_VERSION_RELEASE
 *  PETSC_USE_COMPLEX
 */

/*
 * These macros are defined to make testing for PETSc versions within
 * the deal.II main code as simple as possible. In brief they are used
 * like this: (i) DEAL_II_PETSC_VERSION_LT is used to advance the
 * PETScWrappers to newer versions of PETSc while preserving backward
 * compatibility; and (ii) DEAL_II_PETSC_VERSION_GTE is used to add
 * functionality to the PETScWrappers that does not exist in previous
 * versions of PETSc.  Examples of usage can be found in
 * lac/source/petsc_matrix_base.h.  Note: SLEPcWrappers do not need
 * their own analogical macros, since SLEPc and PETSc must have
 * identical version numbers anyways.
 */
#define DEAL_II_PETSC_VERSION_LT(major,minor,subminor) \
  ((PETSC_VERSION_MAJOR * 10000 + \
    PETSC_VERSION_MINOR * 100 + \
    PETSC_VERSION_SUBMINOR) \
    <  \
    (major)*10000 + (minor)*100 + (subminor))

#define DEAL_II_PETSC_VERSION_GTE(major,minor,subminor) \
  ((PETSC_VERSION_MAJOR * 10000 + \
    PETSC_VERSION_MINOR * 100 + \
    PETSC_VERSION_SUBMINOR) \
    >=  \
    (major)*10000 + (minor)*100 + (subminor))

/*
 * Trilinos:
 */

#ifdef DEAL_II_WITH_TRILINOS
#  define DEAL_II_TRILINOS_VERSION_MAJOR @TRILINOS_VERSION_MAJOR@
#  define DEAL_II_TRILINOS_VERSION_MINOR @TRILINOS_VERSION_MINOR@
#  define DEAL_II_TRILINOS_VERSION_SUBMINOR @TRILINOS_VERSION_SUBMINOR@

#  define DEAL_II_TRILINOS_VERSION_GTE(major,minor,subminor) \
 ((DEAL_II_TRILINOS_VERSION_MAJOR * 10000 + \
    DEAL_II_TRILINOS_VERSION_MINOR * 100 + \
      DEAL_II_TRILINOS_VERSION_SUBMINOR) \
    >=  \
    (major)*10000 + (minor)*100 + (subminor))
#endif


/***********************************************************************
 * Final inclusions:
 */

/*
 * Some systems require including mpi.h before stdio.h which happens in
 * types.h
 */
#if defined(DEAL_II_WITH_MPI) || defined(DEAL_II_WITH_PETSC)
#  include <mpi.h>
#endif

#include <deal.II/base/numbers.h>
#include <deal.II/base/types.h>

#endif

