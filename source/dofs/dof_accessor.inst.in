// ------------------------------------------------------------------------
//
// SPDX-License-Identifier: LGPL-2.1-or-later
// Copyright (C) 2008 - 2024 by the deal.II authors
//
// This file is part of the deal.II library.
//
// Part of the source code is dual licensed under Apache-2.0 WITH
// LLVM-exception OR LGPL-2.1-or-later. Detailed license information
// governing the source code and code contributions can be found in
// LICENSE.md and CONTRIBUTING.md at the top level directory of deal.II.
//
// ------------------------------------------------------------------------



for (deal_II_struct_dimension : DIMENSIONS; deal_II_dimension : DIMENSIONS;
     deal_II_space_dimension : SPACE_DIMENSIONS;
     lda : BOOL)
  {
#if deal_II_struct_dimension <= deal_II_dimension && \
  deal_II_dimension <= deal_II_space_dimension
    template class DoFAccessor<deal_II_struct_dimension,
                               deal_II_dimension,
                               deal_II_space_dimension,
                               lda>;
    template class TriaRawIterator<DoFAccessor<deal_II_struct_dimension,
                                               deal_II_dimension,
                                               deal_II_space_dimension,
                                               lda>>;
    template class TriaIterator<DoFAccessor<deal_II_struct_dimension,
                                            deal_II_dimension,
                                            deal_II_space_dimension,
                                            lda>>;
    template class TriaActiveIterator<DoFAccessor<deal_II_struct_dimension,
                                                  deal_II_dimension,
                                                  deal_II_space_dimension,
                                                  lda>>;
#endif
  }


for (deal_II_dimension : DIMENSIONS; deal_II_space_dimension : SPACE_DIMENSIONS;
     lda : BOOL)
  {
#if deal_II_dimension <= deal_II_space_dimension
    template class DoFCellAccessor<deal_II_dimension,
                                   deal_II_space_dimension,
                                   lda>;
    template class TriaRawIterator<
      DoFCellAccessor<deal_II_dimension, deal_II_space_dimension, lda>>;
    template class TriaIterator<
      DoFCellAccessor<deal_II_dimension, deal_II_space_dimension, lda>>;
    template class TriaActiveIterator<
      DoFCellAccessor<deal_II_dimension, deal_II_space_dimension, lda>>;

    template void internal::DoFAccessorImplementation::
      get_cell_dof_indices<deal_II_dimension, deal_II_space_dimension, lda>(
        const dealii::
          DoFCellAccessor<deal_II_dimension, deal_II_space_dimension, lda> &,
        boost::container::small_vector<types::global_dof_index, 27> &,
        const unsigned int);
#endif
  }


for (deal_II_struct_dimension : DIMENSIONS; deal_II_dimension : DIMENSIONS;
     deal_II_space_dimension : SPACE_DIMENSIONS)
  {
#if deal_II_dimension <= deal_II_space_dimension
    template class DoFInvalidAccessor<deal_II_struct_dimension,
                                      deal_II_dimension,
                                      deal_II_space_dimension>;
#endif
  }
