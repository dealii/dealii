// ------------------------------------------------------------------------
//
// SPDX-License-Identifier: LGPL-2.1-or-later
// Copyright (C) 2013 - 2022 by the deal.II authors
//
// This file is part of the deal.II library.
//
// Part of the source code is dual licensed under Apache-2.0 WITH
// LLVM-exception OR LGPL-2.1-or-later. Detailed license information
// governing the source code and code contributions can be found in
// LICENSE.md and CONTRIBUTING.md at the top level directory of deal.II.
//
// ------------------------------------------------------------------------



for (VEC : VECTOR_TYPES; deal_II_dimension : DIMENSIONS; lda : BOOL)
  {
    template void DoFCellAccessor<deal_II_dimension, deal_II_dimension, lda>::
      set_dof_values_by_interpolation(const Vector<VEC::value_type> &,
                                      VEC &,
                                      const types::fe_index,
                                      const bool) const;

    template void DoFCellAccessor<deal_II_dimension, deal_II_dimension, lda>::
      distribute_local_to_global_by_interpolation(
        const Vector<VEC::value_type> &, VEC &, const types::fe_index fe_index)
        const;

#if deal_II_dimension != 3

    template void
    DoFCellAccessor<deal_II_dimension, deal_II_dimension + 1, lda>::
      set_dof_values_by_interpolation(const Vector<VEC::value_type> &,
                                      VEC &,
                                      const types::fe_index,
                                      const bool) const;

    template void
    DoFCellAccessor<deal_II_dimension, deal_II_dimension + 1, lda>::
      distribute_local_to_global_by_interpolation(
        const Vector<VEC::value_type> &, VEC &, const types::fe_index fe_index)
        const;

#endif

#if deal_II_dimension == 3

    template void DoFCellAccessor<1, 3, lda>::set_dof_values_by_interpolation(
      const Vector<VEC::value_type> &, VEC &, const types::fe_index, const bool)
      const;

    template void
    DoFCellAccessor<1, 3, lda>::distribute_local_to_global_by_interpolation(
      const Vector<VEC::value_type> &, VEC &, const types::fe_index fe_index)
      const;

#endif
  }
