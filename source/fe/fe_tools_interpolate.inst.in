// ------------------------------------------------------------------------
//
// SPDX-License-Identifier: LGPL-2.1-or-later
// Copyright (C) 2013 - 2020 by the deal.II authors
//
// This file is part of the deal.II library.
//
// Part of the source code is dual licensed under Apache-2.0 WITH
// LLVM-exception OR LGPL-2.1-or-later. Detailed license information
// governing the source code and code contributions can be found in
// LICENSE.md and CONTRIBUTING.md at the top level directory of deal.II.
//
// ------------------------------------------------------------------------



for (deal_II_dimension : DIMENSIONS; deal_II_space_dimension : SPACE_DIMENSIONS;
     Vector : VECTOR_TYPES)
  {
    namespace FETools
    \{

#if deal_II_dimension <= deal_II_space_dimension
      template void
      interpolate<deal_II_dimension, deal_II_space_dimension>(
        const DoFHandler<deal_II_dimension, deal_II_space_dimension> &,
        const Vector &,
        const DoFHandler<deal_II_dimension, deal_II_space_dimension> &,
        Vector &);

      template void
      interpolate<deal_II_dimension, deal_II_space_dimension>(
        const DoFHandler<deal_II_dimension, deal_II_space_dimension> &,
        const Vector &,
        const DoFHandler<deal_II_dimension, deal_II_space_dimension> &,
        const AffineConstraints<Vector::value_type> &,
        Vector &);
#endif
    \}
  }

for (deal_II_dimension : DIMENSIONS; deal_II_space_dimension : SPACE_DIMENSIONS)
  {
    namespace FETools
    \{
#if deal_II_dimension == deal_II_space_dimension
#endif
    \}
  }

for (deal_II_dimension : DIMENSIONS; deal_II_space_dimension : SPACE_DIMENSIONS;
     VEC : VECTOR_TYPES)
  {
    namespace FETools
    \{
#if deal_II_dimension == deal_II_space_dimension
      template void
      back_interpolate<deal_II_dimension>(
        const DoFHandler<deal_II_dimension> &,
        const VEC &,
        const FiniteElement<deal_II_dimension> &,
        VEC &);

      template void
      back_interpolate<deal_II_dimension>(
        const DoFHandler<deal_II_dimension> &,
        const AffineConstraints<VEC::value_type> &,
        const VEC &,
        const DoFHandler<deal_II_dimension> &,
        const AffineConstraints<VEC::value_type> &,
        VEC &);

      template void
      interpolation_difference<deal_II_dimension>(
        const DoFHandler<deal_II_dimension> &,
        const VEC &,
        const FiniteElement<deal_II_dimension> &,
        VEC &);

      template void
      interpolation_difference<deal_II_dimension>(
        const DoFHandler<deal_II_dimension> &,
        const AffineConstraints<VEC::value_type> &,
        const VEC &,
        const DoFHandler<deal_II_dimension> &,
        const AffineConstraints<VEC::value_type> &,
        VEC &);

      template void
      project_dg<deal_II_dimension>(const DoFHandler<deal_II_dimension> &,
                                    const VEC &,
                                    const DoFHandler<deal_II_dimension> &,
                                    VEC &);
#endif
    \}
  }
