// ---------------------------------------------------------------------
//
// Copyright (C) 2010 - 2016 by the deal.II authors
//
// This file is part of the deal.II library.
//
// The deal.II library is free software; you can use it, redistribute
// it, and/or modify it under the terms of the GNU Lesser General
// Public License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
// The full text of the license can be found in the file LICENSE at
// the top level of the deal.II distribution.
//
// ---------------------------------------------------------------------




for (S : REAL_SCALARS; deal_II_dimension : DIMENSIONS)
{
    namespace parallel
    \{
    namespace distributed
    \{
    namespace GridRefinement
    \{
    template
    void
    refine_and_coarsen_fixed_number<deal_II_dimension,S,deal_II_dimension>
    (parallel::distributed::Triangulation<deal_II_dimension> &,
     const dealii::Vector<S> &,
     const double,
     const double,
     const unsigned int);

    template
    void
    refine_and_coarsen_fixed_fraction<deal_II_dimension,S,deal_II_dimension>
    (parallel::distributed::Triangulation<deal_II_dimension> &,
     const dealii::Vector<S> &,
     const double,
     const double);
    \}
    \}
    \}


#if deal_II_dimension == 3

    namespace parallel
    \{
    namespace distributed
    \{
    namespace GridRefinement
    \{
    template
    void
    refine_and_coarsen_fixed_number<deal_II_dimension-1,S,deal_II_dimension>
    (parallel::distributed::Triangulation<deal_II_dimension-1,deal_II_dimension> &,
     const dealii::Vector<S> &,
     const double,
     const double,
     const unsigned int);

    template
    void
    refine_and_coarsen_fixed_fraction<deal_II_dimension-1,S,deal_II_dimension>
    (parallel::distributed::Triangulation<deal_II_dimension-1,deal_II_dimension> &,
     const dealii::Vector<S> &,
     const double,
     const double);
    \}
    \}
    \}

#endif
}
