// ---------------------------------------------------------------------
//
// Copyright (C) 1998 - 2014 by the deal.II authors
//
// This file is part of the deal.II library.
//
// The deal.II library is free software; you can use it, redistribute
// it, and/or modify it under the terms of the GNU Lesser General
// Public License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
// The full text of the license can be found in the file LICENSE at
// the top level of the deal.II distribution.
//
// ---------------------------------------------------------------------


for (VEC : SERIAL_VECTORS ; deal_II_dimension : DIMENSIONS; deal_II_space_dimension :  SPACE_DIMENSIONS)
  {
#if deal_II_dimension <= deal_II_space_dimension
    namespace VectorTools \{

      template
        void integrate_difference<deal_II_dimension, VEC, Vector<float>, deal_II_space_dimension>
        (const Mapping<deal_II_dimension, deal_II_space_dimension>&,
         const DoFHandler<deal_II_dimension, deal_II_space_dimension>&,
         const VEC&,
         const Function<deal_II_space_dimension>&,
         Vector<float>&,
         const Quadrature<deal_II_dimension>&,
         const NormType&,
         const Function<deal_II_space_dimension>*,
         const double);

      template
        void integrate_difference<deal_II_dimension, VEC, Vector<float>, deal_II_space_dimension>
        (const DoFHandler<deal_II_dimension, deal_II_space_dimension>&,
         const VEC&,
         const Function<deal_II_space_dimension>&,
         Vector<float>&,
         const Quadrature<deal_II_dimension>&,
         const NormType&,
         const Function<deal_II_space_dimension>*,
         const double);

      template
        void integrate_difference<deal_II_dimension, VEC, Vector<double>, deal_II_space_dimension >
        (const Mapping<deal_II_dimension, deal_II_space_dimension>&,
         const DoFHandler<deal_II_dimension, deal_II_space_dimension>&,
         const VEC&,
         const Function<deal_II_space_dimension>&,
         Vector<double>&,
         const Quadrature<deal_II_dimension>&,
         const NormType&,
         const Function<deal_II_space_dimension>*,
         const double);

      template
        void integrate_difference<deal_II_dimension, VEC, Vector<double>, deal_II_space_dimension >
        (const DoFHandler<deal_II_dimension, deal_II_space_dimension>&,
         const VEC&,
         const Function<deal_II_space_dimension>&,
         Vector<double>&,
         const Quadrature<deal_II_dimension>&,
         const NormType&,
         const Function<deal_II_space_dimension>*,
         const double);

      template
        void integrate_difference<deal_II_dimension, VEC, Vector<double>, deal_II_space_dimension>
        (const hp::MappingCollection<deal_II_dimension,deal_II_space_dimension>&,
         const hp::DoFHandler<deal_II_dimension,deal_II_space_dimension>&,
         const VEC&,
         const Function<deal_II_space_dimension>&,
         Vector<double>&,
         const hp::QCollection<deal_II_dimension>&,
         const NormType&,
         const Function<deal_II_space_dimension>*,
         const double);

      template
        void integrate_difference<deal_II_dimension, VEC, Vector<double>, deal_II_space_dimension>
        (const hp::DoFHandler<deal_II_dimension,deal_II_space_dimension>&,
         const VEC&,
         const Function<deal_II_space_dimension>&,
         Vector<double>&,
         const hp::QCollection<deal_II_dimension>&,
         const NormType&,
         const Function<deal_II_space_dimension>*,
         const double);

      template
        void integrate_difference<deal_II_dimension, VEC, Vector<float>, deal_II_space_dimension>
        (const hp::MappingCollection<deal_II_dimension,deal_II_space_dimension>&,
         const hp::DoFHandler<deal_II_dimension,deal_II_space_dimension>&,
         const VEC&,
         const Function<deal_II_space_dimension>&,
         Vector<float>&,
         const hp::QCollection<deal_II_dimension>&,
         const NormType&,
         const Function<deal_II_space_dimension>*,
         const double);

      template
        void integrate_difference<deal_II_dimension, VEC, Vector<float>, deal_II_space_dimension>
        (const hp::DoFHandler<deal_II_dimension,deal_II_space_dimension>&,
         const VEC&,
         const Function<deal_II_space_dimension>&,
         Vector<float>&,
         const hp::QCollection<deal_II_dimension>&,
         const NormType&,
         const Function<deal_II_space_dimension>*,
         const double);

      \}
#endif
  }
