// ------------------------------------------------------------------------
//
// SPDX-License-Identifier: LGPL-2.1-or-later
// Copyright (C) 2010 - 2023 by the deal.II authors
//
// This file is part of the deal.II library.
//
// Part of the source code is dual licensed under Apache-2.0 WITH
// LLVM-exception OR LGPL-2.1-or-later. Detailed license information
// governing the source code and code contributions can be found in
// LICENSE.md and CONTRIBUTING.md at the top level directory of deal.II.
//
// ------------------------------------------------------------------------

for (number : REAL_AND_COMPLEX_SCALARS)
  {
    template void MatrixTools::local_apply_boundary_values(
      const std::map<types::global_dof_index, number> &boundary_values,
      const std::vector<types::global_dof_index>      &local_dof_indices,
      FullMatrix<number>                              &local_matrix,
      Vector<number>                                  &local_rhs,
      const bool                                       eliminate_columns);

    template void MatrixTools::apply_boundary_values(
      const std::map<types::global_dof_index, number> &boundary_values,
      SparseMatrix<number>                            &matrix,
      Vector<number>                                  &solution,
      Vector<number>                                  &right_hand_side,
      const bool                                       eliminate_columns);

    template void MatrixTools::apply_boundary_values(
      const std::map<types::global_dof_index, number> &boundary_values,
      BlockSparseMatrix<number>                       &matrix,
      BlockVector<number>                             &solution,
      BlockVector<number>                             &right_hand_side,
      const bool                                       eliminate_columns);
  }
