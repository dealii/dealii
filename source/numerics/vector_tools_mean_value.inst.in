// ---------------------------------------------------------------------
//
// Copyright (C) 1998 - 2023 by the deal.II authors
//
// This file is part of the deal.II library.
//
// The deal.II library is free software; you can use it, redistribute
// it, and/or modify it under the terms of the GNU Lesser General
// Public License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
// The full text of the license can be found in the file LICENSE.md at
// the top level directory of deal.II.
//
// ---------------------------------------------------------------------


for (VEC : VECTOR_TYPES; deal_II_dimension : DIMENSIONS;
     deal_II_space_dimension : SPACE_DIMENSIONS)
  {
#if deal_II_dimension <= deal_II_space_dimension
    namespace VectorTools
    \{

      template VEC::value_type
      compute_mean_value<deal_II_dimension>(
        const Mapping<deal_II_dimension, deal_II_space_dimension> &,
        const DoFHandler<deal_II_dimension, deal_II_space_dimension> &,
        const Quadrature<deal_II_dimension> &,
        const VEC &,
        const unsigned int);

      template VEC::value_type
      compute_mean_value<deal_II_dimension>(
        const DoFHandler<deal_II_dimension, deal_II_space_dimension> &,
        const Quadrature<deal_II_dimension> &,
        const VEC &,
        const unsigned int);

      template void
      add_constant<>(VEC &                                      solution,
                     const DoFHandler<deal_II_dimension,
                                      deal_II_space_dimension> &dof_handler,
                     const unsigned int                         component,
                     const typename VEC::value_type constant_adjustment);
    \}
#endif
  }



for (VEC : VECTOR_TYPES)
  {
    namespace VectorTools
    \{
      template void
      subtract_mean_value(VEC &, const std::vector<bool> &);
    \}
  }
