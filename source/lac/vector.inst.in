// ------------------------------------------------------------------------
//
// SPDX-License-Identifier: LGPL-2.1-or-later
// Copyright (C) 2007 - 2023 by the deal.II authors
//
// This file is part of the deal.II library.
//
// Part of the source code is dual licensed under Apache-2.0 WITH
// LLVM-exception OR LGPL-2.1-or-later. Detailed license information
// governing the source code and code contributions can be found in
// LICENSE.md and CONTRIBUTING.md at the top level directory of deal.II.
//
// ------------------------------------------------------------------------



for (SCALAR : REAL_AND_COMPLEX_SCALARS)
  {
    // Check that the class we declare here satisfies the
    // vector-space-vector concept. If we catch it here,
    // any mistake in the vector class declaration would
    // show up in uses of this class later on as well.
#ifdef DEAL_II_HAVE_CXX20
    static_assert(concepts::is_vector_space_vector<Vector<SCALAR>>);
#endif

    template class Vector<SCALAR>;
  }

for (S1, S2 : REAL_SCALARS)
  {
    template bool Vector<S1>::operator==<S2>(const Vector<S2> &) const;
    template S1   Vector<S1>::operator*<S2>(const Vector<S2> &) const;
  }

for (S1, S2 : COMPLEX_SCALARS)
  {
    template bool Vector<S1>::operator==<S2>(const Vector<S2> &) const;
    template S1   Vector<S1>::operator*<S2>(const Vector<S2> &) const;
  }

for (S1 : COMPLEX_SCALARS; S2 : REAL_SCALARS)
  {
    template Vector<S1> &Vector<S1>::operator=<S2>(const Vector<S2> &);
  }
