// ---------------------------------------------------------------------
//
// Copyright (C) 2020 by the deal.II authors
//
// This file is part of the deal.II library.
//
// The deal.II library is free software; you can use it, redistribute
// it, and/or modify it under the terms of the GNU Lesser General
// Public License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
// The full text of the license can be found in the file LICENSE.md at
// the top level directory of deal.II.
//
// ---------------------------------------------------------------------



for (SCALAR : REAL_SCALARS)
  {
    namespace LinearAlgebra
    \{
      namespace SharedMPI
      \{
        template class Vector<SCALAR, ::dealii::MemorySpace::Host>;
        template void
        Vector<SCALAR, ::dealii::MemorySpace::Host>::import<
          ::dealii::MemorySpace::Host>(
          const Vector<SCALAR, ::dealii::MemorySpace::Host> &,
          VectorOperation::values);
        template void
        Vector<SCALAR, ::dealii::MemorySpace::Host>::reinit<SCALAR>(
          const Vector<SCALAR, ::dealii::MemorySpace::Host> &,
          const bool);
        template SCALAR
        Vector<SCALAR, ::dealii::MemorySpace::Host>::inner_product_local<
          SCALAR>(const Vector<SCALAR, ::dealii::MemorySpace::Host> &) const;
        template void
        Vector<SCALAR, ::dealii::MemorySpace::Host>::
          copy_locally_owned_data_from<SCALAR>(
            const Vector<SCALAR, ::dealii::MemorySpace::Host> &);
      \}
    \}
  }
