// ---------------------------------------------------------------------
//
// Copyright (C) 2002 - 2014 by the deal.II authors
//
// This file is part of the deal.II library.
//
// The deal.II library is free software; you can use it, redistribute
// it, and/or modify it under the terms of the GNU Lesser General
// Public License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
// The full text of the license can be found in the file LICENSE at
// the top level of the deal.II distribution.
//
// ---------------------------------------------------------------------



for (S : REAL_SCALARS)
  {
    template class SparseMatrixEZ<S>;
  }


for (S1, S2 : REAL_SCALARS)
  {
    template
      void SparseMatrixEZ<S1>::vmult<S2> (Vector<S2> &,
					  const Vector<S2> &) const;
    template
      void SparseMatrixEZ<S1>::Tvmult<S2> (Vector<S2> &,
					   const Vector<S2> &) const;
    template
      void SparseMatrixEZ<S1>::vmult_add<S2> (Vector<S2> &,
					      const Vector<S2> &) const;
    template
      void SparseMatrixEZ<S1>::Tvmult_add<S2> (Vector<S2> &,
					       const Vector<S2> &) const;

    template
      void SparseMatrixEZ<S1>::precondition_SSOR<S2> (Vector<S2> &,
						      const Vector<S2> &,
						      const S1,
						      const std::vector<std::size_t>&) const;
    template
      void SparseMatrixEZ<S1>::precondition_SOR<S2> (Vector<S2> &,
						     const Vector<S2> &,
						     const S1) const;
    template
      void SparseMatrixEZ<S1>::precondition_TSOR<S2> (Vector<S2> &,
						      const Vector<S2> &,
						      const S1) const;
    template
      void SparseMatrixEZ<S1>::precondition_Jacobi<S2> (Vector<S2> &,
							const Vector<S2> &,
							const S1) const;
  }

