// ------------------------------------------------------------------------
//
// SPDX-License-Identifier: LGPL-2.1-or-later
// Copyright (C) 2021 - 2023 by the deal.II authors
//
// This file is part of the deal.II library.
//
// Part of the source code is dual licensed under Apache-2.0 WITH
// LLVM-exception OR LGPL-2.1-or-later. Detailed license information
// governing the source code and code contributions can be found in
// LICENSE.md and CONTRIBUTING.md at the top level directory of deal.II.
//
// ------------------------------------------------------------------------


for (DIM : DIMENSIONS; SCALAR : REAL_SCALARS)
  {
    DEAL_II_NAMESPACE_OPEN
    namespace ArborXWrappers
    {
#if ARBORX_VERSION_MAJOR < 2
      template PointIntersectPredicate::PointIntersectPredicate(
        const std::vector<dealii::Point<DIM, SCALAR>> &points);
      template PointNearestPredicate::PointNearestPredicate(
        const std::vector<dealii::Point<DIM, SCALAR>> &points,
        const unsigned int                             n_nearest_neighbors);

      template BoundingBoxIntersectPredicate::BoundingBoxIntersectPredicate(
        const std::vector<dealii::BoundingBox<DIM, SCALAR>> &bb);
      template BoundingBoxNearestPredicate::BoundingBoxNearestPredicate(
        const std::vector<dealii::BoundingBox<DIM, SCALAR>> &bb,
        const unsigned int n_nearest_neighbors);

      template SphereIntersectPredicate::SphereIntersectPredicate(
        const std::vector<std::pair<dealii::Point<DIM, SCALAR>, SCALAR>>
          &spheres);
      template SphereNearestPredicate::SphereNearestPredicate(
        const std::vector<std::pair<dealii::Point<DIM, SCALAR>, SCALAR>>
                          &spheres,
        const unsigned int n_nearest_neighbors);
#else
      template class PointIntersectPredicate<DIM, SCALAR>;
      template class PointNearestPredicate<DIM, SCALAR>;

      template class BoundingBoxIntersectPredicate<DIM, SCALAR>;
      template class BoundingBoxNearestPredicate<DIM, SCALAR>;

      template class SphereIntersectPredicate<DIM, SCALAR>;
      template class SphereNearestPredicate<DIM, SCALAR>;
#endif
    \}
    DEAL_II_NAMESPACE_CLOSE

    namespace ArborX
    {

#if ARBORX_VERSION_MAJOR < 2
      template struct AccessTraits<std::vector<dealii::Point<DIM, SCALAR>>,
                                   PrimitivesTag>;

      template struct AccessTraits<
        std::vector<dealii::BoundingBox<DIM, SCALAR>>,
        PrimitivesTag>;

      template struct AccessTraits<
        std::vector<std::pair<dealii::Point<DIM, SCALAR>, SCALAR>>,
        PrimitivesTag>;
#else
      template struct AccessTraits<std::vector<dealii::Point<DIM, SCALAR>>>;

      template struct AccessTraits<
        std::vector<dealii::BoundingBox<DIM, SCALAR>>>;

      template struct AccessTraits<
        std::vector<std::pair<dealii::Point<DIM, SCALAR>, SCALAR>>>;
#endif
    \}
  }
