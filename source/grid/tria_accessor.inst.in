// ---------------------------------------------------------------------
//
// Copyright (C) 1998 - 2018 by the deal.II authors
//
// This file is part of the deal.II library.
//
// The deal.II library is free software; you can use it, redistribute
// it, and/or modify it under the terms of the GNU Lesser General
// Public License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
// The full text of the license can be found in the file LICENSE.md at
// the top level directory of deal.II.
//
// ---------------------------------------------------------------------



for (deal_II_struct_dimension : DIMENSIONS; deal_II_dimension : DIMENSIONS;
     deal_II_space_dimension : DIMENSIONS)
  {
#if deal_II_struct_dimension <= deal_II_dimension && \
  deal_II_dimension <= deal_II_space_dimension
    template class TriaAccessorBase<deal_II_struct_dimension,
                                    deal_II_dimension,
                                    deal_II_space_dimension>;
    template class TriaAccessor<deal_II_struct_dimension,
                                deal_II_dimension,
                                deal_II_space_dimension>;
    template class TriaRawIterator<TriaAccessor<deal_II_struct_dimension,
                                                deal_II_dimension,
                                                deal_II_space_dimension>>;
    template class TriaIterator<TriaAccessor<deal_II_struct_dimension,
                                             deal_II_dimension,
                                             deal_II_space_dimension>>;
    template class TriaActiveIterator<TriaAccessor<deal_II_struct_dimension,
                                                   deal_II_dimension,
                                                   deal_II_space_dimension>>;
#endif
  }


for (deal_II_dimension : DIMENSIONS; deal_II_space_dimension : DIMENSIONS)
  {
#if deal_II_dimension <= deal_II_space_dimension
    template class CellAccessor<deal_II_dimension, deal_II_space_dimension>;
    template class TriaRawIterator<
      CellAccessor<deal_II_dimension, deal_II_space_dimension>>;
    template class TriaIterator<
      CellAccessor<deal_II_dimension, deal_II_space_dimension>>;
    template class TriaActiveIterator<
      CellAccessor<deal_II_dimension, deal_II_space_dimension>>;
#endif
  }
