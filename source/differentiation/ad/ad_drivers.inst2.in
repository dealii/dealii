// ---------------------------------------------------------------------
//
// Copyright (C) 2016 - 2019 by the deal.II authors
//
// This file is part of the deal.II library.
//
// The deal.II library is free software; you can use it, redistribute
// it, and/or modify it under the terms of the GNU Lesser General
// Public License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
// The full text of the license can be found in the file LICENSE at
// the top level of the deal.II distribution.
//
// ---------------------------------------------------------------------

// TODO: Include complex types

for (number : REAL_SCALARS)
{
  namespace Differentiation
  \{
  namespace AD
  \{

    // -------------------------- Types ----------------------

    template
    struct Types<typename Differentiation::AD::NumberTraits<number,NumberTypes::sacado_dfad_dfad>::ad_type>;

    template
    struct Types<typename Differentiation::AD::NumberTraits<number,NumberTypes::sacado_dfad>::ad_type>;

    template
    struct Types<typename Differentiation::AD::NumberTraits<number,NumberTypes::sacado_rad>::ad_type>;

    template
    struct Types<typename Differentiation::AD::NumberTraits<number,NumberTypes::sacado_rad_dfad>::ad_type>;
    
    // -------------------------- Numbers ----------------------

    template
    struct Numbers<typename Differentiation::AD::NumberTraits<number,NumberTypes::sacado_dfad_dfad>::ad_type>;

    template
    struct Numbers<typename Differentiation::AD::NumberTraits<number,NumberTypes::sacado_dfad>::ad_type>;

    template
    struct Numbers<typename Differentiation::AD::NumberTraits<number,NumberTypes::sacado_rad>::ad_type>;

    template
    struct Numbers<typename Differentiation::AD::NumberTraits<number,NumberTypes::sacado_rad_dfad>::ad_type>;

    // -------------------------- TapedDrivers ----------------------

    template
    struct TapedDrivers<typename Differentiation::AD::NumberTraits<number,NumberTypes::sacado_dfad_dfad>::ad_type,number>;

    template
    struct TapedDrivers<typename Differentiation::AD::NumberTraits<number,NumberTypes::sacado_dfad>::ad_type,number>;

    template
    struct TapedDrivers<typename Differentiation::AD::NumberTraits<number,NumberTypes::sacado_rad>::ad_type,number>;

    template
    struct TapedDrivers<typename Differentiation::AD::NumberTraits<number,NumberTypes::sacado_rad_dfad>::ad_type,number>;

    // -------------------------- TapelessDrivers ----------------------

    template
    struct TapelessDrivers<typename Differentiation::AD::NumberTraits<number,NumberTypes::sacado_dfad_dfad>::ad_type,number>;

    template
    struct TapelessDrivers<typename Differentiation::AD::NumberTraits<number,NumberTypes::sacado_dfad>::ad_type,number>;

    template
    struct TapelessDrivers<typename Differentiation::AD::NumberTraits<number,NumberTypes::sacado_rad>::ad_type,number>;

    template
    struct TapelessDrivers<typename Differentiation::AD::NumberTraits<number,NumberTypes::sacado_rad_dfad>::ad_type,number>;

  \}
  \}
}
