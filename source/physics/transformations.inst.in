// ---------------------------------------------------------------------
//
// Copyright (C) 2016 by the deal.II authors
//
// This file is part of the deal.II library.
//
// The deal.II library is free software; you can use it, redistribute
// it, and/or modify it under the terms of the GNU Lesser General
// Public License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
// The full text of the license can be found in the file LICENSE at
// the top level of the deal.II distribution.
//
// ---------------------------------------------------------------------


for (deal_II_dimension : DIMENSIONS; number : REAL_SCALARS)
{

    namespace Physics
    \{
    namespace Transformations
    \{
    template
    Tensor<1,deal_II_dimension,number>
    nansons_formula (
        const Tensor<1,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);

    namespace Contravariant
    \{
    template
    Tensor<1,deal_II_dimension,number>
    push_forward (
        const Tensor<1,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);

    template
    Tensor<2,deal_II_dimension,number>
    push_forward (
        const Tensor<2,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);

    template
    SymmetricTensor<2,deal_II_dimension,number>
    push_forward (
        const SymmetricTensor<2,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);

    template
    Tensor<4,deal_II_dimension,number>
    push_forward (
        const Tensor<4,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);

    template
    SymmetricTensor<4,deal_II_dimension,number>
    push_forward (
        const SymmetricTensor<4,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);

    template
    Tensor<1,deal_II_dimension,number>
    pull_back (
        const Tensor<1,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);

    template
    Tensor<2,deal_II_dimension,number>
    pull_back (
        const Tensor<2,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);

    template
    SymmetricTensor<2,deal_II_dimension,number>
    pull_back (
        const SymmetricTensor<2,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);

    template
    Tensor<4,deal_II_dimension,number>
    pull_back (
        const Tensor<4,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);

    template
    SymmetricTensor<4,deal_II_dimension,number>
    pull_back (
        const SymmetricTensor<4,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);
    \}

    namespace Covariant
    \{
    template
    Tensor<1,deal_II_dimension,number>
    push_forward (
        const Tensor<1,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);

    template
    Tensor<2,deal_II_dimension,number>
    push_forward (
        const Tensor<2,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);

    template
    SymmetricTensor<2,deal_II_dimension,number>
    push_forward (
        const SymmetricTensor<2,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);

    template
    Tensor<4,deal_II_dimension,number>
    push_forward (
        const Tensor<4,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);

    template
    SymmetricTensor<4,deal_II_dimension,number>
    push_forward (
        const SymmetricTensor<4,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);

    template
    Tensor<1,deal_II_dimension,number>
    pull_back (
        const Tensor<1,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);

    template
    Tensor<2,deal_II_dimension,number>
    pull_back (
        const Tensor<2,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);

    template
    SymmetricTensor<2,deal_II_dimension,number>
    pull_back (
        const SymmetricTensor<2,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);

    template
    Tensor<4,deal_II_dimension,number>
    pull_back (
        const Tensor<4,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);

    template
    SymmetricTensor<4,deal_II_dimension,number>
    pull_back (
        const SymmetricTensor<4,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);
    \}

    namespace Piola
    \{
    template
    Tensor<1,deal_II_dimension,number>
    push_forward (
        const Tensor<1,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);

    template
    Tensor<2,deal_II_dimension,number>
    push_forward (
        const Tensor<2,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);

    template
    SymmetricTensor<2,deal_II_dimension,number>
    push_forward (
        const SymmetricTensor<2,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);

    template
    Tensor<4,deal_II_dimension,number>
    push_forward (
        const Tensor<4,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);

    template
    SymmetricTensor<4,deal_II_dimension,number>
    push_forward (
        const SymmetricTensor<4,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);

    template
    Tensor<1,deal_II_dimension,number>
    pull_back (
        const Tensor<1,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);

    template
    Tensor<2,deal_II_dimension,number>
    pull_back (
        const Tensor<2,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);

    template
    SymmetricTensor<2,deal_II_dimension,number>
    pull_back (
        const SymmetricTensor<2,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);

    template
    Tensor<4,deal_II_dimension,number>
    pull_back (
        const Tensor<4,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);

    template
    SymmetricTensor<4,deal_II_dimension,number>
    pull_back (
        const SymmetricTensor<4,deal_II_dimension,number> &,
        const Tensor<2,deal_II_dimension,number> &);
    \}

    \}
    \}
}
