// ------------------------------------------------------------------------
//
// SPDX-License-Identifier: LGPL-2.1-or-later
// Copyright (C) 2010 - 2021 by the deal.II authors
//
// This file is part of the deal.II library.
//
// Part of the source code is dual licensed under Apache-2.0 WITH
// LLVM-exception OR LGPL-2.1-or-later. Detailed license information
// governing the source code and code contributions can be found in
// LICENSE.md and CONTRIBUTING.md at the top level directory of deal.II.
//
// ------------------------------------------------------------------------



for (deal_II_dimension : DIMENSIONS)
  {
    template void MGTransferSelect<float>::build<deal_II_dimension>(
      const DoFHandler<deal_II_dimension> &,
      unsigned int,
      unsigned int,
      const std::vector<unsigned int> &,
      const std::vector<unsigned int> &,
      const std::vector<std::set<types::global_dof_index>> &);

    template void MGTransferSelect<double>::build<deal_II_dimension>(
      const DoFHandler<deal_II_dimension> &,
      unsigned int,
      unsigned int,
      const std::vector<unsigned int> &,
      const std::vector<unsigned int> &,
      const std::vector<std::set<types::global_dof_index>> &);

    template void MGTransferSelect<float>::copy_to_mg(
      const DoFHandler<deal_II_dimension> &,
      MGLevelObject<Vector<float>> &,
      const Vector<double> &) const;
    template void MGTransferSelect<float>::copy_to_mg(
      const DoFHandler<deal_II_dimension> &,
      MGLevelObject<Vector<float>> &,
      const BlockVector<double> &) const;
    template void MGTransferSelect<float>::copy_from_mg(
      const DoFHandler<deal_II_dimension> &,
      Vector<double> &,
      const MGLevelObject<Vector<float>> &) const;
    template void MGTransferSelect<float>::copy_from_mg(
      const DoFHandler<deal_II_dimension> &,
      BlockVector<double> &,
      const MGLevelObject<Vector<float>> &) const;
    template void MGTransferSelect<float>::copy_from_mg_add(
      const DoFHandler<deal_II_dimension> &,
      Vector<double> &,
      const MGLevelObject<Vector<float>> &) const;
    template void MGTransferSelect<float>::copy_from_mg_add(
      const DoFHandler<deal_II_dimension> &,
      BlockVector<double> &,
      const MGLevelObject<Vector<float>> &) const;

    template void MGTransferSelect<double>::copy_to_mg(
      const DoFHandler<deal_II_dimension> &,
      MGLevelObject<Vector<double>> &,
      const Vector<double> &) const;
    template void MGTransferSelect<double>::copy_to_mg(
      const DoFHandler<deal_II_dimension> &,
      MGLevelObject<Vector<double>> &,
      const BlockVector<double> &) const;
    template void MGTransferSelect<double>::copy_from_mg(
      const DoFHandler<deal_II_dimension> &,
      Vector<double> &,
      const MGLevelObject<Vector<double>> &) const;
    template void MGTransferSelect<double>::copy_from_mg(
      const DoFHandler<deal_II_dimension> &,
      BlockVector<double> &,
      const MGLevelObject<Vector<double>> &) const;
    template void MGTransferSelect<double>::copy_from_mg_add(
      const DoFHandler<deal_II_dimension> &,
      Vector<double> &,
      const MGLevelObject<Vector<double>> &) const;
    template void MGTransferSelect<double>::copy_from_mg_add(
      const DoFHandler<deal_II_dimension> &,
      BlockVector<double> &,
      const MGLevelObject<Vector<double>> &) const;
  }
